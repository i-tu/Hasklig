FIND(1)                   General Commands Manual                  FIND(1)

[1mNAME[0m
       find - search for files in a directory hierarchy

[1mSYNOPSIS[0m
       [1mfind  [22m[-H]  [-L]  [-P] [-D debugopts] [-Olevel] [starting-point...]
       [expression]

[1mDESCRIPTION[0m
       This manual page documents the  GNU  version  of  [1mfind[22m.   GNU  [1mfind[0m
       searches  the directory tree rooted at each given starting-point by
       evaluating the given expression from left to  right,  according  to
       the  rules of precedence (see section OPERATORS), until the outcome
       is known (the left hand side is false for [4mand[24m operations, true  for
       [4mor[24m),  at  which  point  [1mfind [22mmoves on to the next file name.  If no
       starting-point is specified, `.' is assumed.

       If you are using [1mfind [22min an environment where security is important
       (for  example  if  you  are using it to search directories that are
       writable by other users), you should read the `Security  Considera‚Äê
       tions'  chapter  of  the  findutils  documentation, which is called
       [1mFinding Files [22mand comes with findutils.   That  document  also  in‚Äê
       cludes  a  lot more detail and discussion than this manual page, so
       you may find it a more useful source of information.

[1mOPTIONS[0m
       The [1m-H[22m, [1m-L [22mand [1m-P [22moptions control the treatment of symbolic  links.
       Command-line  arguments  following  these  are taken to be names of
       files or directories to be examined, up to the first argument  that
       begins with `-', or the argument `(' or `!'.  That argument and any
       following arguments are taken to be the expression describing  what
       is  to  be searched for.  If no paths are given, the current direc‚Äê
       tory is used.  If no expression is given, the expression [1m-print  [22mis
       used  (but you should probably consider using [1m-print0 [22minstead, any‚Äê
       way).

       This manual page talks about `options' within the expression  list.
       These options control the behaviour of [1mfind [22mbut are specified imme‚Äê
       diately after the last path name.  The five `real' options [1m-H[22m,  [1m-L[22m,
       [1m-P[22m, [1m-D [22mand [1m-O [22mmust appear before the first path name, if at all.  A
       double dash [1m-- [22mcould theoretically be used to signal that  any  re‚Äê
       maining  arguments  are  not options, but this does not really work
       due to the way [1mfind [22mdetermines the end of the following path  argu‚Äê
       ments:  it  does that by reading until an expression argument comes
       (which also starts with a `-').  Now,  if  a  path  argument  would
       start  with  a `-', then [1mfind [22mwould treat it as expression argument
       instead.  Thus, to ensure that all start points are taken as  such,
       and  especially  to  prevent that wildcard patterns expanded by the
       calling shell are not mistakenly treated as  expression  arguments,
       it  is  generally  safer  to prefix wildcards or dubious path names
       with either `./' or to use absolute path names starting with '/'.

       -P     Never follow symbolic links.  This is the default behaviour.
              When  [1mfind  [22mexamines  or prints information about files, and
              the file is a symbolic link, the information used  shall  be
              taken from the properties of the symbolic link itself.

       -L     Follow  symbolic links.  When [1mfind [22mexamines or prints infor‚Äê
              mation about files, the information used shall be taken from
              the  properties  of  the  file to which the link points, not
              from the link itself (unless it is a broken symbolic link or
              [1mfind  [22mis  unable  to  examine  the  file  to  which the link
              points).  Use of this option implies [1m-noleaf[22m.  If you  later
              use  the  [1m-P [22moption, [1m-noleaf [22mwill still be in effect.  If [1m-L[0m
              is in effect and [1mfind [22mdiscovers a symbolic link to a  subdi‚Äê
              rectory  during  its  search, the subdirectory pointed to by
              the symbolic link will be searched.

              When the [1m-L [22moption is in effect, the  [1m-type  [22mpredicate  will
              always  match  against  the type of the file that a symbolic
              link points to rather than the link itself (unless the  sym‚Äê
              bolic  link  is  broken).   Actions  that can cause symbolic
              links to become broken while [1mfind [22mis executing (for  example
              [1m-delete[22m)  can  give  rise  to confusing behaviour.  Using [1m-L[0m
              causes the [1m-lname [22mand [1m-ilname [22mpredicates  always  to  return
              false.

       -H     Do  not  follow  symbolic links, except while processing the
              command line arguments.  When [1mfind [22mexamines or prints infor‚Äê
              mation about files, the information used shall be taken from
              the properties of the symbolic link itself.  The only excep‚Äê
              tion  to this behaviour is when a file specified on the com‚Äê
              mand line is a symbolic link, and the link can be  resolved.
              For that situation, the information used is taken from what‚Äê
              ever the link points to (that is,  the  link  is  followed).
              The  information about the link itself is used as a fallback
              if the file pointed to by the symbolic link cannot be  exam‚Äê
              ined.   If [1m-H [22mis in effect and one of the paths specified on
              the command line is a symbolic link to a directory, the con‚Äê
              tents  of  that directory will be examined (though of course
              [1m-maxdepth 0 [22mwould prevent this).

       If more than one of [1m-H[22m, [1m-L [22mand [1m-P [22mis specified, each overrides  the
       others;  the  last  one appearing on the command line takes effect.
       Since it is the default, the [1m-P [22moption should be considered  to  be
       in effect unless either [1m-H [22mor [1m-L [22mis specified.

       GNU  [1mfind  [22mfrequently stats files during the processing of the com‚Äê
       mand line itself, before any searching has  begun.   These  options
       also affect how those arguments are processed.  Specifically, there
       are a number of tests that compare files listed on the command line
       against  a  file  we  are currently considering.  In each case, the
       file specified on the command line will have been examined and some
       of  its  properties  will have been saved.  If the named file is in
       fact a symbolic link, and the [1m-P [22moption is in effect (or if neither
       [1m-H  [22mnor [1m-L [22mwere specified), the information used for the comparison
       will be taken from the properties of the symbolic link.  Otherwise,
       it  will  be  taken from the properties of the file the link points
       to.  If [1mfind [22mcannot follow the link (for example because it has in‚Äê
       sufficient privileges or the link points to a nonexistent file) the
       properties of the link itself will be used.

       When the [1m-H [22mor [1m-L [22moptions are in effect, any symbolic links  listed
       as  the  argument of [1m-newer [22mwill be dereferenced, and the timestamp
       will be taken from the file to which the symbolic link points.  The
       same consideration applies to [1m-newerXY[22m, [1m-anewer [22mand [1m-cnewer[22m.

       The  [1m-follow [22moption has a similar effect to [1m-L[22m, though it takes ef‚Äê
       fect at the point where it appears (that is, if [1m-L [22mis not used  but
       [1m-follow  [22mis, any symbolic links appearing after [1m-follow [22mon the com‚Äê
       mand line will be dereferenced, and those before it will not).

       -D debugopts
              Print diagnostic information; this can be helpful  to  diag‚Äê
              nose problems with why [1mfind [22mis not doing what you want.  The
              list of debug options should be comma  separated.   Compati‚Äê
              bility  of  the  debug options is not guaranteed between re‚Äê
              leases of findutils.  For a complete list of valid debug op‚Äê
              tions,  see the output of [1mfind -D help[22m.  Valid debug options
              include

              exec   Show diagnostic information relating to  -exec,  -ex‚Äê
                     ecdir, -ok and -okdir

              opt    Prints diagnostic information relating to the optimi‚Äê
                     sation of the expression tree; see the -O option.

              rates  Prints a summary indicating how often each  predicate
                     succeeded or failed.

              search Navigate the directory tree verbosely.

              stat   Print  messages  as  files are examined with the [1mstat[0m
                     and [1mlstat [22msystem calls.  The [1mfind  [22mprogram  tries  to
                     minimise such calls.

              tree   Show  the  expression  tree in its original and opti‚Äê
                     mised form.

              all    Enable all of the other debug options (but [1mhelp[22m).

              help   Explain the debugging options.

       -Olevel
              Enables query optimisation.  The [1mfind [22mprogram reorders tests
              to  speed  up execution while preserving the overall effect;
              that is, predicates with side effects are not reordered rel‚Äê
              ative  to  each  other.  The optimisations performed at each
              optimisation level are as follows.

              0      Equivalent to optimisation level 1.

              1      This is the default  optimisation  level  and  corre‚Äê
                     sponds to the traditional behaviour.  Expressions are
                     reordered so that tests based only on  the  names  of
                     files  (for  example  [1m-name [22mand [1m-regex[22m) are performed
                     first.

              2      Any [1m-type [22mor [1m-xtype [22mtests  are  performed  after  any
                     tests  based  only  on the names of files, but before
                     any tests that require information  from  the  inode.
                     On  many  modern versions of Unix, file types are re‚Äê
                     turned by  [1mreaddir()  [22mand  so  these  predicates  are
                     faster to evaluate than predicates which need to stat
                     the file first.  If you use the [1m-fstype [4m[22mFOO[24m predicate
                     and  specify a filesystem type [4mFOO[24m which is not known
                     (that is, present in `/etc/mtab') at  the  time  [1mfind[0m
                     starts, that predicate is equivalent to [1m-false[22m.

              3      At this optimisation level, the full cost-based query
                     optimiser is enabled.  The order of tests is modified
                     so  that  cheap (i.e. fast) tests are performed first
                     and more expensive ones are performed later, if  nec‚Äê
                     essary.  Within each cost band, predicates are evalu‚Äê
                     ated earlier or later according to whether  they  are
                     likely  to  succeed or not.  For [1m-o[22m, predicates which
                     are likely to succeed are evaluated earlier, and  for
                     [1m-a[22m, predicates which are likely to fail are evaluated
                     earlier.

              The cost-based optimiser has a fixed idea of how likely  any
              given  test  is  to  succeed.  In some cases the probability
              takes account of the specific nature of the test (for  exam‚Äê
              ple,  [1m-type f  [22mis  assumed to be more likely to succeed than
              [1m-type c[22m).  The cost-based optimiser is currently being eval‚Äê
              uated.   If  it does not actually improve the performance of
              [1mfind[22m, it will be removed again.   Conversely,  optimisations
              that  prove  to be reliable, robust and effective may be en‚Äê
              abled at lower optimisation levels over time.  However,  the
              default  behaviour  (i.e.  optimisation level 1) will not be
              changed in the 4.3.x release  series.   The  findutils  test
              suite  runs all the tests on [1mfind [22mat each optimisation level
              and ensures that the result is the same.

[1mEXPRESSION[0m
       The part of the command line after the list of starting  points  is
       the  [4mexpression[24m.   This is a kind of query specification describing
       how we match files and what we do with the files that were matched.
       An expression is composed of a sequence of things:

       Tests  Tests  return a true or false value, usually on the basis of
              some property of a file we are considering.  The [1m-empty [22mtest
              for example is true only when the current file is empty.

       Actions
              Actions have side effects (such as printing something on the
              standard output) and return either true  or  false,  usually
              based on whether or not they are successful.  The [1m-print [22mac‚Äê
              tion for example prints the name of the current file on  the
              standard output.

       Global options
              Global  options  affect  the  operation of tests and actions
              specified on any part of the command line.   Global  options
              always  return  true.   The  [1m-depth [22moption for example makes
              [1mfind [22mtraverse the file system in a depth-first order.

       Positional options
              Positional options affect only tests or actions which follow
              them.   Positional  options always return true.  The [1m-regex‚Äê[0m
              [1mtype [22moption for example is positional, specifying the  regu‚Äê
              lar  expression  dialect  for  regular expressions occurring
              later on the command line.

       Operators
              Operators join together the other items within  the  expres‚Äê
              sion.   They include for example [1m-o [22m(meaning logical OR) and
              [1m-a [22m(meaning logical AND).  Where an operator is missing,  [1m-a[0m
              is assumed.

       The [1m-print [22maction is performed on all files for which the whole ex‚Äê
       pression is true, unless it contains an action other than [1m-prune [22mor
       [1m-quit[22m.   Actions  which  inhibit  the  default  [1m-print [22mare [1m-delete[22m,
       [1m-exec[22m, [1m-execdir[22m, [1m-ok[22m, [1m-okdir[22m, [1m-fls[22m, [1m-fprint[22m, [1m-fprintf[22m, [1m-ls[22m,  [1m-print[0m
       and [1m-printf[22m.

       The  [1m-delete  [22maction  also  acts  like  an option (since it implies
       [1m-depth[22m).

   [1mPOSITIONAL OPTIONS[0m
       Positional options always return true.  They affect only tests  oc‚Äê
       curring later on the command line.

       -daystart
              Measure  times (for [1m-amin[22m, [1m-atime[22m, [1m-cmin[22m, [1m-ctime[22m, [1m-mmin[22m, and
              [1m-mtime[22m) from the beginning of  today  rather  than  from  24
              hours  ago.   This  option  only  affects tests which appear
              later on the command line.

       -follow
              Deprecated; use the [1m-L [22moption instead.  Dereference symbolic
              links.   Implies  [1m-noleaf[22m.   The [1m-follow [22moption affects only
              those tests which appear after it on the command line.   Un‚Äê
              less the [1m-H [22mor [1m-L [22moption has been specified, the position of
              the [1m-follow [22moption changes the behaviour of the [1m-newer [22mpred‚Äê
              icate;  any  files  listed as the argument of [1m-newer [22mwill be
              dereferenced if they are symbolic links.  The same consider‚Äê
              ation  applies to [1m-newerXY[22m, [1m-anewer [22mand [1m-cnewer[22m.  Similarly,
              the [1m-type [22mpredicate will always match against  the  type  of
              the file that a symbolic link points to rather than the link
              itself.  Using [1m-follow [22mcauses the [1m-lname and -ilname  [22mpredi‚Äê
              cates always to return false.

       -regextype [4mtype[0m
              Changes  the  regular expression syntax understood by [1m-regex[0m
              and [1m-iregex [22mtests which occur later on the command line.  To
              see  which  regular  expression types are known, use [1m-regex‚Äê[0m
              [1mtype help[22m.  The Texinfo documentation  (see  [1mSEE  ALSO[22m)  ex‚Äê
              plains  the  meaning  of and differences between the various
              types of regular expression.

       -warn, -nowarn
              Turn warning messages on or off.  These warnings apply  only
              to  the  command line usage, not to any conditions that [1mfind[0m
              might encounter when it searches directories.   The  default
              behaviour  corresponds  to [1m-warn [22mif standard input is a tty,
              and to [1m-nowarn [22motherwise.  If a warning message relating  to
              command-line  usage  is produced, the exit status of [1mfind [22mis
              not affected.  If the POSIXLY_CORRECT  environment  variable
              is  set,  and [1m-warn [22mis also used, it is not specified which,
              if any, warnings will be active.

   [1mGLOBAL OPTIONS[0m
       Global options always return true.  Global options take effect even
       for tests which occur earlier on the command line.  To prevent con‚Äê
       fusion, global options should specified on the  command-line  after
       the  list  of  start points, just before the first test, positional
       option or action.  If you specify a global  option  in  some  other
       place,  [1mfind  [22mwill issue a warning message explaining that this can
       be confusing.

       The global options occur after the list of start points, and so are
       not the same kind of option as [1m-L[22m, for example.

       -d     A  synonym  for -depth, for compatibility with FreeBSD, Net‚Äê
              BSD, MacOS X and OpenBSD.

       -depth Process each directory's contents before the  directory  it‚Äê
              self.  The -delete action also implies [1m-depth[22m.

       -help, --help
              Print a summary of the command-line usage of [1mfind [22mand exit.

       -ignore_readdir_race
              Normally,  [1mfind  [22mwill emit an error message when it fails to
              stat a file.  If you give this option and a file is  deleted
              between  the  time  [1mfind [22mreads the name of the file from the
              directory and the time it tries to stat the file,  no  error
              message  will  be issued.  This also applies to files or di‚Äê
              rectories whose names are given on the command  line.   This
              option  takes  effect  at the time the command line is read,
              which means that you cannot search one part of the  filesys‚Äê
              tem  with this option on and part of it with this option off
              (if you need to do that, you will need  to  issue  two  [1mfind[0m
              commands instead, one with the option and one without it).

              Furthermore,  [1mfind [22mwith the [1m-ignore_readdir_race [22moption will
              ignore errors of the [1m-delete [22maction in the case the file has
              disappeared since the parent directory was read: it will not
              output an error diagnostic,  and  the  return  code  of  the
              [1m-delete [22maction will be true.

       -maxdepth [4mlevels[0m
              Descend  at  most  [4mlevels[24m (a non-negative integer) levels of
              directories below the  starting-points.   Using  [1m-maxdepth 0[0m
              means  only  apply  the  tests  and actions to the starting-
              points themselves.

       -mindepth [4mlevels[0m
              Do not apply any tests or actions at levels less than [4mlevels[0m
              (a  non-negative  integer).  Using [1m-mindepth 1 [22mmeans process
              all files except the starting-points.

       -mount Don't descend directories on other filesystems.   An  alter‚Äê
              nate  name for [1m-xdev[22m, for compatibility with some other ver‚Äê
              sions of [1mfind[22m.

       -noignore_readdir_race
              Turns off the effect of [1m-ignore_readdir_race[22m.

       -noleaf
              Do not optimize by assuming that directories contain 2 fewer
              subdirectories  than  their hard link count.  This option is
              needed when searching filesystems that  do  not  follow  the
              Unix  directory-link  convention,  such  as CD-ROM or MS-DOS
              filesystems or AFS volume mount points.  Each directory on a
              normal  Unix  filesystem has at least 2 hard links: its name
              and its `.' entry.   Additionally,  its  subdirectories  (if
              any)  each have a `..' entry linked to that directory.  When
              [1mfind [22mis examining a directory, after it has statted 2  fewer
              subdirectories  than  the  directory's  link count, it knows
              that the rest of the entries in the directory are non-direc‚Äê
              tories  (`leaf'  files  in the directory tree).  If only the
              files' names need to be examined, there is no need  to  stat
              them; this gives a significant increase in search speed.

       -version, --version
              Print the [1mfind [22mversion number and exit.

       -xautofs
              Don't descend directories on autofs filesystems.

       -xdev  Don't descend directories on other filesystems.

   [1mTESTS[0m
       Some  tests,  for  example [1m-newerXY [22mand [1m-samefile[22m, allow comparison
       between the file currently being examined and some  reference  file
       specified  on the command line.  When these tests are used, the in‚Äê
       terpretation of the reference file is determined by the options [1m-H[22m,
       [1m-L  [22mand [1m-P [22mand any previous [1m-follow[22m, but the reference file is only
       examined once, at the time the command line is parsed.  If the ref‚Äê
       erence  file  cannot  be  examined (for example, the [1mstat[22m(2) system
       call fails for it), an error message is issued, and [1mfind [22mexits with
       a nonzero status.

       A numeric argument [4mn[24m can be specified to tests (like [1m-amin[22m, [1m-mtime[22m,
       [1m-gid[22m, [1m-inum[22m, [1m-links[22m, [1m-size[22m, [1m-uid [22mand [1m-used[22m) as

       [4m+n[24m     for greater than [4mn[24m,

       [4m-n[24m     for less than [4mn[24m,

       [4mn[24m      for exactly [4mn[24m.

       Supported tests:

       -amin [4mn[0m
              File was last accessed less than, more  than  or  exactly  [4mn[0m
              minutes ago.

       -anewer [4mreference[0m
              Time  of  the last access of the current file is more recent
              than that of the last data  modification  of  the  [4mreference[0m
              file.   If [4mreference[24m is a symbolic link and the [1m-H [22moption or
              the [1m-L [22moption is in effect, then the time of the  last  data
              modification of the file it points to is always used.

       -atime [4mn[0m
              File  was last accessed less than, more than or exactly [4mn[24m*24
              hours ago.  When find figures out how many  24-hour  periods
              ago  the  file was last accessed, any fractional part is ig‚Äê
              nored, so to match [1m-atime +1[22m, a file has to  have  been  ac‚Äê
              cessed at least [4mtwo[24m days ago.

       -cmin [4mn[0m
              File's  status  was last changed less than, more than or ex‚Äê
              actly [4mn[24m minutes ago.

       -cnewer [4mreference[0m
              Time of the last status change of the current file  is  more
              recent than that of the last data modification of the [4mrefer‚Äê[0m
              [4mence[24m file.  If [4mreference[24m is a symbolic link and the  [1m-H  [22mop‚Äê
              tion  or  the  [1m-L  [22moption is in effect, then the time of the
              last data modification of the file it points  to  is  always
              used.

       -ctime [4mn[0m
              File's  status  was last changed less than, more than or ex‚Äê
              actly [4mn[24m*24 hours ago.  See the comments for [1m-atime [22mto under‚Äê
              stand how rounding affects the interpretation of file status
              change times.

       -empty File is empty and is either a regular file or a directory.

       -executable
              Matches files which are executable and directories which are
              searchable  (in a file name resolution sense) by the current
              user.  This takes into  account  access  control  lists  and
              other  permissions  artefacts  which the [1m-perm [22mtest ignores.
              This test makes use of the [1maccess[22m(2) system call, and so can
              be  fooled  by  NFS  servers  which do UID mapping (or root-
              squashing), since many systems implement  [1maccess[22m(2)  in  the
              client's  kernel  and  so cannot make use of the UID mapping
              information held on the server.  Because this test is  based
              only on the result of the [1maccess[22m(2) system call, there is no
              guarantee that a file for which this test succeeds can actu‚Äê
              ally be executed.

       -false Always false.

       -fstype [4mtype[0m
              File  is on a filesystem of type [4mtype[24m.  The valid filesystem
              types vary among different versions of Unix;  an  incomplete
              list  of  filesystem types that are accepted on some version
              of Unix or another is: ufs, 4.2, 4.3, nfs, tmp,  mfs,  S51K,
              S52K.   You can use [1m-printf [22mwith the %F directive to see the
              types of your filesystems.

       -gid [4mn[24m File's numeric group ID is less than, more than  or  exactly
              [4mn[24m.

       -group [4mgname[0m
              File belongs to group [4mgname[24m (numeric group ID allowed).

       -ilname [4mpattern[0m
              Like  [1m-lname[22m,  but the match is case insensitive.  If the [1m-L[0m
              option or the [1m-follow [22moption is in effect, this test returns
              false unless the symbolic link is broken.

       -iname [4mpattern[0m
              Like [1m-name[22m, but the match is case insensitive.  For example,
              the patterns `fo*' and `F??' match  the  file  names  `Foo',
              `FOO',  `foo',  `fOo',  etc.   The pattern `*foo*` will also
              match a file called '.foobar'.

       -inum [4mn[0m
              File has inode number smaller than, greater than or  exactly
              [4mn[24m.  It is normally easier to use the [1m-samefile [22mtest instead.

       -ipath [4mpattern[0m
              Like [1m-path[22m.  but the match is case insensitive.

       -iregex [4mpattern[0m
              Like [1m-regex[22m, but the match is case insensitive.

       -iwholename [4mpattern[0m
              See -ipath.  This alternative is less portable than [1m-ipath[22m.

       -links [4mn[0m
              File has less than, more than or exactly [4mn[24m hard links.

       -lname [4mpattern[0m
              File  is  a symbolic link whose contents match shell pattern
              [4mpattern[24m.  The metacharacters do not treat `/'  or  `.'  spe‚Äê
              cially.   If  the  [1m-L [22moption or the [1m-follow [22moption is in ef‚Äê
              fect, this test returns false unless the  symbolic  link  is
              broken.

       -mmin [4mn[0m
              File's  data  was  last modified less than, more than or ex‚Äê
              actly [4mn[24m minutes ago.

       -mtime [4mn[0m
              File's data was last modified less than, more  than  or  ex‚Äê
              actly [4mn[24m*24 hours ago.  See the comments for [1m-atime [22mto under‚Äê
              stand how rounding affects the interpretation of file  modi‚Äê
              fication times.

       -name [4mpattern[0m
              Base of file name (the path with the leading directories re‚Äê
              moved) matches shell pattern [4mpattern[24m.  Because  the  leading
              directories  are  removed,  the  file names considered for a
              match with [1m-name [22mwill never include a slash, so `-name  a/b'
              will  never  match  anything (you probably need to use [1m-path[0m
              instead).  A warning is issued if you try to do this, unless
              the   environment  variable  POSIXLY_CORRECT  is  set.   The
              metacharacters (`*', `?', and `[]') match a `.' at the start
              of  the  base name (this is a change in findutils-4.2.2; see
              section STANDARDS CONFORMANCE below).  To ignore a directory
              and  the files under it, use [1m-prune [22mrather than checking ev‚Äê
              ery file in the tree; see an example in the  description  of
              that  action.   Braces  are not recognised as being special,
              despite the fact  that  some  shells  including  Bash  imbue
              braces  with a special meaning in shell patterns.  The file‚Äê
              name matching is performed with the use  of  the  [1mfnmatch[22m(3)
              library  function.   Don't  forget to enclose the pattern in
              quotes in order to protect it from expansion by the shell.

       -newer [4mreference[0m
              Time of the last data modification of the  current  file  is
              more  recent  than that of the last data modification of the
              [4mreference[24m file.  If [4mreference[24m is a symbolic link and the  [1m-H[0m
              option  or  the [1m-L [22moption is in effect, then the time of the
              last data modification of the file it points  to  is  always
              used.

       -newerXY [4mreference[0m
              Succeeds  if  timestamp  [4mX[24m  of  the file being considered is
              newer than timestamp [4mY[24m of the file [4mreference[24m.  The letters [4mX[0m
              and [4mY[24m can be any of the following letters:

              a   The access time of the file [4mreference[0m
              B   The birth time of the file [4mreference[0m
              c   The inode status change time of [4mreference[0m
              m   The modification time of the file [4mreference[0m
              t   [4mreference[24m is interpreted directly as a time

              Some  combinations  are  invalid; for example, it is invalid
              for [4mX[24m to be [4mt[24m.  Some combinations are not implemented on all
              systems;  for example [4mB[24m is not supported on all systems.  If
              an invalid or unsupported combination of [4mXY[24m is specified,  a
              fatal error results.  Time specifications are interpreted as
              for the argument to the [1m-d [22moption of GNU [1mdate[22m.  If  you  try
              to  use  the  birth  time of a reference file, and the birth
              time cannot be determined, a fatal  error  message  results.
              If  you  specify  a  test  which refers to the birth time of
              files being examined, this test  will  fail  for  any  files
              where the birth time is unknown.

       -nogroup
              No group corresponds to file's numeric group ID.

       -nouser
              No user corresponds to file's numeric user ID.

       -path [4mpattern[0m
              File name matches shell pattern [4mpattern[24m.  The metacharacters
              do not treat `/' or `.' specially; so, for example,
                  find . -path "./sr*sc"
              will print an entry for a directory  called  [4m./src/misc[24m  (if
              one  exists).   To ignore a whole directory tree, use [1m-prune[0m
              rather than checking every file in the tree.  Note that  the
              pattern  match test applies to the whole file name, starting
              from one of the start points named on the command line.   It
              would  only  make sense to use an absolute path name here if
              the relevant start point is also  an  absolute  path.   This
              means that this command will never match anything:
                  find bar -path /foo/bar/myfile -print
              Find compares the [1m-path [22margument with the concatenation of a
              directory name and the base name of the file it's examining.
              Since  the  concatenation will never end with a slash, [1m-path[0m
              arguments ending in a slash will match nothing (except  per‚Äê
              haps  a  start  point  specified  on the command line).  The
              predicate [1m-path [22mis also supported by HP-UX [1mfind [22mand is  part
              of the POSIX 2008 standard.

       -perm [4mmode[0m
              File's permission bits are exactly [4mmode[24m (octal or symbolic).
              Since an exact match is required, if you want  to  use  this
              form  for  symbolic  modes, you may have to specify a rather
              complex mode string.  For  example  `-perm  g=w'  will  only
              match  files  which  have mode 0020 (that is, ones for which
              group write permission is the only permission set).   It  is
              more  likely that you will want to use the `/' or `-' forms,
              for example `-perm -g=w', which matches any file with  group
              write  permission.  See the [1mEXAMPLES [22msection for some illus‚Äê
              trative examples.

       -perm -[4mmode[0m
              All of the permission bits [4mmode[24m are set for the file.   Sym‚Äê
              bolic  modes  are accepted in this form, and this is usually
              the way in which you would want to use them.  You must spec‚Äê
              ify `u', `g' or `o' if you use a symbolic mode.  See the [1mEX‚Äê[0m
              [1mAMPLES [22msection for some illustrative examples.

       -perm /[4mmode[0m
              Any of the permission bits [4mmode[24m are set for the file.   Sym‚Äê
              bolic  modes  are  accepted  in this form.  You must specify
              `u', `g' or `o' if you use a symbolic mode.  See  the  [1mEXAM‚Äê[0m
              [1mPLES  [22msection for some illustrative examples.  If no permis‚Äê
              sion bits in [4mmode[24m are set, this test matches any  file  (the
              idea  here  is  to  be  consistent  with  the  behaviour  of
              [1m-perm -000[22m).

       -perm +[4mmode[0m
              This is no longer supported (and has been  deprecated  since
              2005).  Use [1m-perm /[4m[22mmode[24m instead.

       -readable
              Matches  files which are readable by the current user.  This
              takes into account access control lists  and  other  permis‚Äê
              sions  artefacts  which  the  [1m-perm [22mtest ignores.  This test
              makes use of the [1maccess[22m(2) system call, and so can be fooled
              by  NFS  servers  which  do UID mapping (or root-squashing),
              since many systems implement [1maccess[22m(2) in the client's  ker‚Äê
              nel  and  so  cannot make use of the UID mapping information
              held on the server.

       -regex [4mpattern[0m
              File name matches regular expression  [4mpattern[24m.   This  is  a
              match  on  the  whole  path,  not a search.  For example, to
              match a file named [4m./fubar3,[24m you can use the regular expres‚Äê
              sion `.*bar.' or `.*b.*3', but not `f.*r3'.  The regular ex‚Äê
              pressions understood by [1mfind [22mare by  default  Emacs  Regular
              Expressions  (except that `.' matches newline), but this can
              be changed with the [1m-regextype [22moption.

       -samefile [4mname[0m
              File refers to the same inode as [4mname[24m.  When [1m-L  [22mis  in  ef‚Äê
              fect, this can include symbolic links.

       -size [4mn[24m[cwbkMG]
              File  uses less than, more than or exactly [4mn[24m units of space,
              rounding up.  The following suffixes can be used:

              `b'    for 512-byte blocks (this is the default if no suffix
                     is used)

              `c'    for bytes

              `w'    for two-byte words

              `k'    for kibibytes (KiB, units of 1024 bytes)

              `M'    for  mebibytes  (MiB,  units of 1024 * 1024 = 1048576
                     bytes)

              `G'    for gibibytes (GiB, units of 1024 *  1024  *  1024  =
                     1073741824 bytes)

              The  size  is  simply  the st_size member of the struct stat
              populated by the lstat (or stat) system call, rounded up  as
              shown  above.   In other words, it's consistent with the re‚Äê
              sult you get for [1mls -l[22m.  Bear in mind that the `%k' and `%b'
              format  specifiers  of  [1m-printf  [22mhandle sparse files differ‚Äê
              ently.  The `b' suffix always denotes  512-byte  blocks  and
              never  1024-byte blocks, which is different to the behaviour
              of [1m-ls[22m.

              The + and - prefixes signify greater than and less than,  as
              usual;  i.e., an exact size of [4mn[24m units does not match.  Bear
              in mind that the size  is  rounded  up  to  the  next  unit.
              Therefore  [1m-size -1M  [22mis  not equivalent to [1m-size -1048576c[22m.
              The former only matches  empty  files,  the  latter  matches
              files from 0 to 1,048,575 bytes.

       -true  Always true.

       -type [4mc[0m
              File is of type [4mc[24m:

              b      block (buffered) special

              c      character (unbuffered) special

              d      directory

              p      named pipe (FIFO)

              f      regular file

              l      symbolic link; this is never true if the [1m-L [22moption or
                     the [1m-follow [22moption is in effect, unless the  symbolic
                     link  is  broken.  If you want to search for symbolic
                     links when [1m-L [22mis in effect, use [1m-xtype[22m.

              s      socket

              D      door (Solaris)

              To search for more than one type at once, you can supply the
              combined  list of type letters separated by a comma `,' (GNU
              extension).

       -uid [4mn[24m File's numeric user ID is less than, more than or exactly [4mn[24m.

       -used [4mn[0m
              File was last accessed less than, more  than  or  exactly  [4mn[0m
              days after its status was last changed.

       -user [4muname[0m
              File is owned by user [4muname[24m (numeric user ID allowed).

       -wholename [4mpattern[0m
              See -path.  This alternative is less portable than [1m-path[22m.

       -writable
              Matches  files which are writable by the current user.  This
              takes into account access control lists  and  other  permis‚Äê
              sions  artefacts  which  the  [1m-perm [22mtest ignores.  This test
              makes use of the [1maccess[22m(2) system call, and so can be fooled
              by  NFS  servers  which  do UID mapping (or root-squashing),
              since many systems implement [1maccess[22m(2) in the client's  ker‚Äê
              nel  and  so  cannot make use of the UID mapping information
              held on the server.

       -xtype [4mc[0m
              The same as [1m-type [22munless the file is a symbolic  link.   For
              symbolic  links:  if the [1m-H [22mor [1m-P [22moption was specified, true
              if the file is a link to a file of type [4mc[24m; if the [1m-L  [22moption
              has  been given, true if [4mc[24m is `l'.  In other words, for sym‚Äê
              bolic links, [1m-xtype [22mchecks the type of the file  that  [1m-type[0m
              does not check.

       -context [4mpattern[0m
              (SELinux  only)  Security  context  of the file matches glob
              [4mpattern[24m.

   [1mACTIONS[0m
       -delete
              Delete files; true if removal  succeeded.   If  the  removal
              failed,  an  error  message  is  issued.   If [1m-delete [22mfails,
              [1mfind[22m's exit status will be nonzero (when it  eventually  ex‚Äê
              its).   Use  of  [1m-delete [22mautomatically turns on the `[1m-depth[22m'
              option.

              [1mWarnings[22m: Don't forget that the find command line is  evalu‚Äê
              ated  as  an  expression, so putting [1m-delete [22mfirst will make
              [1mfind [22mtry to delete everything below the starting points  you
              specified.   When testing a [1mfind [22mcommand line that you later
              intend to use with [1m-delete[22m, you  should  explicitly  specify
              [1m-depth  [22min  order to avoid later surprises.  Because [1m-delete[0m
              implies [1m-depth[22m, you cannot usefully use [1m-prune  [22mand  [1m-delete[0m
              together.

              Together with the [1m-ignore_readdir_race [22moption, [1mfind [22mwill ig‚Äê
              nore errors of the [1m-delete [22maction in the case the  file  has
              disappeared since the parent directory was read: it will not
              output an error diagnostic,  and  the  return  code  of  the
              [1m-delete [22maction will be true.

       -exec [4mcommand[24m ;
              Execute  [4mcommand[24m; true if 0 status is returned.  All follow‚Äê
              ing arguments to [1mfind [22mare taken to be arguments to the  com‚Äê
              mand  until  an  argument  consisting of `;' is encountered.
              The string `{}' is replaced by the current file  name  being
              processed  everywhere it occurs in the arguments to the com‚Äê
              mand, not just in arguments where it is alone,  as  in  some
              versions of [1mfind[22m.  Both of these constructions might need to
              be escaped (with a `\') or quoted to protect them  from  ex‚Äê
              pansion by the shell.  See the [1mEXAMPLES [22msection for examples
              of the use of the [1m-exec [22moption.  The  specified  command  is
              run  once for each matched file.  The command is executed in
              the starting  directory.   There  are  unavoidable  security
              problems surrounding use of the [1m-exec [22maction; you should use
              the [1m-execdir [22moption instead.

       -exec [4mcommand[24m {} +
              This variant of the [1m-exec [22maction runs the specified  command
              on  the selected files, but the command line is built by ap‚Äê
              pending each selected file name at the end; the total number
              of  invocations  of  the  command will be much less than the
              number of matched files.  The command line is built in  much
              the  same way that [1mxargs [22mbuilds its command lines.  Only one
              instance of `{}' is allowed within the command, and it  must
              appear  at  the end, immediately before the `+'; it needs to
              be escaped (with a `\') or quoted to protect it from  inter‚Äê
              pretation  by  the  shell.   The  command is executed in the
              starting directory.  If any invocation with the `+' form re‚Äê
              turns  a  non-zero value as exit status, then [1mfind [22mreturns a
              non-zero exit status.  If [1mfind [22mencounters an error, this can
              sometimes  cause an immediate exit, so some pending commands
              may not be  run  at  all.   For  this  reason  [1m-exec [4m[22mmy-com‚Äê[0m
              [4mmand[24m [1m... {} + -quit  [22mmay  not  result in [4mmy-command[24m actually
              being run.  This variant of [1m-exec [22malways returns true.

       -execdir [4mcommand[24m ;

       -execdir [4mcommand[24m {} +
              Like [1m-exec[22m, but the specified command is run from the subdi‚Äê
              rectory  containing  the matched file, which is not normally
              the directory in which you started [1mfind[22m.  As with -exec, the
              {}  should  be quoted if find is being invoked from a shell.
              This a much more secure method for invoking commands, as  it
              avoids race conditions during resolution of the paths to the
              matched files.  As with the [1m-exec [22maction, the  `+'  form  of
              [1m-execdir  [22mwill build a command line to process more than one
              matched file, but any given invocation of [4mcommand[24m will  only
              list  files that exist in the same subdirectory.  If you use
              this option, you must ensure  that  your  [1m$PATH  [22menvironment
              variable  does not reference `.'; otherwise, an attacker can
              run any commands they like by leaving an appropriately-named
              file  in  a  directory  in which you will run [1m-execdir[22m.  The
              same applies to having entries in [1m$PATH [22mwhich are  empty  or
              which  are  not absolute directory names.  If any invocation
              with the `+' form returns a non-zero value as  exit  status,
              then  [1mfind  [22mreturns a non-zero exit status.  If [1mfind [22mencoun‚Äê
              ters an error, this can sometimes cause an  immediate  exit,
              so  some pending commands may not be run at all.  The result
              of the action depends on whether the [1m+ [22mor the [1m;  [22mvariant  is
              being used; [1m-execdir [4m[22mcommand[24m [1m{} + [22malways returns true, while
              [1m-execdir [4m[22mcommand[24m [1m{} ; [22mreturns true only if  [4mcommand[24m  returns
              0.

       -fls [4mfile[0m
              True;  like  [1m-ls [22mbut write to [4mfile[24m like [1m-fprint[22m.  The output
              file is always created,  even  if  the  predicate  is  never
              matched.   See the [1mUNUSUAL FILENAMES [22msection for information
              about how unusual characters in filenames are handled.

       -fprint [4mfile[0m
              True; print the full file name into file [4mfile[24m.  If [4mfile[24m does
              not exist when [1mfind [22mis run, it is created; if it does exist,
              it is truncated.  The file names [4m/dev/stdout[24m and [4m/dev/stderr[0m
              are handled specially; they refer to the standard output and
              standard error output, respectively.  The output file is al‚Äê
              ways  created,  even if the predicate is never matched.  See
              the [1mUNUSUAL FILENAMES [22msection for information about how  un‚Äê
              usual characters in filenames are handled.

       -fprint0 [4mfile[0m
              True; like [1m-print0 [22mbut write to [4mfile[24m like [1m-fprint[22m.  The out‚Äê
              put file is always created, even if the predicate  is  never
              matched.   See the [1mUNUSUAL FILENAMES [22msection for information
              about how unusual characters in filenames are handled.

       -fprintf [4mfile[24m [4mformat[0m
              True; like [1m-printf [22mbut write to [4mfile[24m like [1m-fprint[22m.  The out‚Äê
              put  file  is always created, even if the predicate is never
              matched.  See the [1mUNUSUAL FILENAMES [22msection for  information
              about how unusual characters in filenames are handled.

       -ls    True;  list current file in [1mls -dils [22mformat on standard out‚Äê
              put.  The block counts are of 1 KB blocks, unless the  envi‚Äê
              ronment  variable  POSIXLY_CORRECT  is  set,  in  which case
              512-byte blocks are used.  See the [1mUNUSUAL FILENAMES [22msection
              for  information  about  how unusual characters in filenames
              are handled.

       -ok [4mcommand[24m ;
              Like [1m-exec [22mbut ask the user first.  If the user agrees,  run
              the  command.   Otherwise just return false.  If the command
              is run, its standard input is redirected from [4m/dev/null[24m.

              The response to the prompt is matched against a pair of reg‚Äê
              ular  expressions  to  determine  if it is an affirmative or
              negative response.  This regular expression is obtained from
              the  system if the `POSIXLY_CORRECT' environment variable is
              set, or otherwise from [1mfind[22m's message translations.  If  the
              system  has  no  suitable  definition, [1mfind[22m's own definition
              will be used.  In either case,  the  interpretation  of  the
              regular  expression  itself will be affected by the environ‚Äê
              ment variables 'LC_CTYPE' (character classes)  and  'LC_COL‚Äê
              LATE' (character ranges and equivalence classes).

       -okdir [4mcommand[24m ;
              Like  [1m-execdir [22mbut ask the user first in the same way as for
              [1m-ok[22m.  If the user does not agree, just return false.  If the
              command  is  run,  its  standard  input  is  redirected from
              [4m/dev/null[24m.

       -print True; print the full file name on the standard output,  fol‚Äê
              lowed  by  a  newline.  If you are piping the output of [1mfind[0m
              into another program and there is the  faintest  possibility
              that  the  files which you are searching for might contain a
              newline,  then  you  should  seriously  consider  using  the
              [1m-print0 [22moption instead of [1m-print[22m.  See the [1mUNUSUAL FILENAMES[0m
              section for information  about  how  unusual  characters  in
              filenames are handled.

       -print0
              True;  print the full file name on the standard output, fol‚Äê
              lowed by a null character (instead of the newline  character
              that [1m-print [22muses).  This allows file names that contain new‚Äê
              lines or other types of white space to be  correctly  inter‚Äê
              preted  by  programs that process the [1mfind [22moutput.  This op‚Äê
              tion corresponds to the [1m-0 [22moption of [1mxargs[22m.

       -printf [4mformat[0m
              True; print [4mformat[24m on the standard output, interpreting  `\'
              escapes and `%' directives.  Field widths and precisions can
              be specified as with the [1mprintf[22m(3) C function.  Please  note
              that  many  of  the fields are printed as %s rather than %d,
              and this may mean that flags don't work as you might expect.
              This  also  means  that  the  `-'  flag does work (it forces
              fields to be left-aligned).  Unlike [1m-print[22m, [1m-printf [22mdoes not
              add a newline at the end of the string.  The escapes and di‚Äê
              rectives are:

              \a     Alarm bell.

              \b     Backspace.

              \c     Stop printing from this format immediately and  flush
                     the output.

              \f     Form feed.

              \n     Newline.

              \r     Carriage return.

              \t     Horizontal tab.

              \v     Vertical tab.

              \0     ASCII NUL.

              \\     A literal backslash (`\').

              \NNN   The character whose ASCII code is NNN (octal).

              A  `\'  character followed by any other character is treated
              as an ordinary character, so they both are printed.

              %%     A literal percent sign.

              %a     File's last access time in the format returned by the
                     C [1mctime[22m(3) function.

              %A[4mk[24m    File's last access time in the format specified by [4mk[24m,
                     which is either `@' or a directive for  the  C  [1mstrf‚Äê[0m
                     [1mtime[22m(3)  function.  The following shows an incomplete
                     list of possible values for [4mk[24m.  Please refer  to  the
                     documentation of [1mstrftime[22m(3) for the full list.  Some
                     of the conversion specification characters might  not
                     be  available  on  all systems, due to differences in
                     the implementation of the [1mstrftime[22m(3)  library  func‚Äê
                     tion.

                     @      seconds  since  Jan.  1, 1970, 00:00 GMT, with
                            fractional part.

                     Time fields:

                     H      hour (00..23)

                     I      hour (01..12)

                     k      hour ( 0..23)

                     l      hour ( 1..12)

                     M      minute (00..59)

                     p      locale's AM or PM

                     r      time, 12-hour (hh:mm:ss [AP]M)

                     S      Second (00.00 .. 61.00).   There  is  a  frac‚Äê
                            tional part.

                     T      time, 24-hour (hh:mm:ss.xxxxxxxxxx)

                     +      Date  and  time, separated by `+', for example
                            `2004-04-28+22:22:05.0'.  This is a GNU exten‚Äê
                            sion.   The time is given in the current time‚Äê
                            zone (which may be affected by setting the  TZ
                            environment  variable).  The seconds field in‚Äê
                            cludes a fractional part.

                     X      locale's  time  representation  (H:M:S).   The
                            seconds field includes a fractional part.

                     Z      time  zone  (e.g., EDT), or nothing if no time
                            zone is determinable

                     Date fields:

                     a      locale's abbreviated weekday name (Sun..Sat)

                     A      locale's full weekday  name,  variable  length
                            (Sunday..Saturday)

                     b      locale's abbreviated month name (Jan..Dec)

                     B      locale's  full  month  name,  variable  length
                            (January..December)

                     c      locale's date and time (Sat  Nov  04  12:02:33
                            EST  1989).   The  format  is  the same as for
                            [1mctime[22m(3) and so to preserve compatibility with
                            that  format,  there  is no fractional part in
                            the seconds field.

                     d      day of month (01..31)

                     D      date (mm/dd/yy)

                     F      date (yyyy-mm-dd)

                     h      same as b

                     j      day of year (001..366)

                     m      month (01..12)

                     U      week number of year with Sunday as  first  day
                            of week (00..53)

                     w      day of week (0..6)

                     W      week  number  of year with Monday as first day
                            of week (00..53)

                     x      locale's date representation (mm/dd/yy)

                     y      last two digits of year (00..99)

                     Y      year (1970...)

              %b     The amount of  disk  space  used  for  this  file  in
                     512-byte  blocks.   Since  disk space is allocated in
                     multiples of the filesystem block size this  is  usu‚Äê
                     ally  greater than %s/512, but it can also be smaller
                     if the file is a sparse file.

              %c     File's last status change time in the format returned
                     by the C [1mctime[22m(3) function.

              %C[4mk[24m    File's  last  status change time in the format speci‚Äê
                     fied by [4mk[24m, which is the same as for %A.

              %d     File's depth in the directory tree; 0 means the  file
                     is a starting-point.

              %D     The  device  number  on  which  the  file exists (the
                     st_dev field of struct stat), in decimal.

              %f     Print the basename; the file's name with any  leading
                     directories  removed (only the last element).  For [1m/[22m,
                     the result is `/'.  See the [1mEXAMPLES [22msection  for  an
                     example.

              %F     Type of the filesystem the file is on; this value can
                     be used for -fstype.

              %g     File's group name, or numeric group ID if  the  group
                     has no name.

              %G     File's numeric group ID.

              %h     Dirname;  the  Leading directories of the file's name
                     (all but the last element).  If the  file  name  con‚Äê
                     tains  no  slashes (since it is in the current direc‚Äê
                     tory) the %h specifier expands  to  `.'.   For  files
                     which  are themselves directories and contain a slash
                     (including [1m/[22m), %h expands to the empty  string.   See
                     the [1mEXAMPLES [22msection for an example.

              %H     Starting-point under which file was found.

              %i     File's inode number (in decimal).

              %k     The  amount  of disk space used for this file in 1 KB
                     blocks.  Since disk space is allocated  in  multiples
                     of  the filesystem block size this is usually greater
                     than %s/1024, but it can also be smaller if the  file
                     is a sparse file.

              %l     Object  of symbolic link (empty string if file is not
                     a symbolic link).

              %m     File's permission bits (in octal).  This option  uses
                     the `traditional' numbers which most Unix implementa‚Äê
                     tions use, but if your particular implementation uses
                     an  unusual  ordering  of octal permissions bits, you
                     will see a difference between the actual value of the
                     file's  mode and the output of %m.  Normally you will
                     want to have a leading zero on this number, and to do
                     this,  you should use the [1m# [22mflag (as in, for example,
                     `%#m').

              %M     File's permissions (in symbolic  form,  as  for  [1mls[22m).
                     This  directive  is  supported in findutils 4.2.5 and
                     later.

              %n     Number of hard links to file.

              %p     File's name.

              %P     File's name with the name of the starting-point under
                     which it was found removed.

              %s     File's size in bytes.

              %S     File's  sparseness.   This  is  calculated as (BLOCK‚Äê
                     SIZE*st_blocks / st_size).  The exact value you  will
                     get  for an ordinary file of a certain length is sys‚Äê
                     tem-dependent.  However, normally sparse  files  will
                     have  values less than 1.0, and files which use indi‚Äê
                     rect blocks may have a value which  is  greater  than
                     1.0.   In general the number of blocks used by a file
                     is file system dependent.  The value used for  BLOCK‚Äê
                     SIZE  is  system-dependent, but is usually 512 bytes.
                     If the file size is zero, the value printed is  unde‚Äê
                     fined.   On systems which lack support for st_blocks,
                     a file's sparseness is assumed to be 1.0.

              %t     File's last modification time in the format  returned
                     by the C [1mctime[22m(3) function.

              %T[4mk[24m    File's last modification time in the format specified
                     by [4mk[24m, which is the same as for %A.

              %u     File's user name, or numeric user ID if the user  has
                     no name.

              %U     File's numeric user ID.

              %y     File's   type   (like   in  [1mls  -l[22m),  U=unknown  type
                     (shouldn't happen)

              %Y     File's type (like %y), plus  follow  symbolic  links:
                     `L'=loop,  `N'=nonexistent,  `?'  for any other error
                     when determining the type of the target of a symbolic
                     link.

              %Z     (SELinux only) file's security context.

              %{ %[ %(
                     Reserved for future use.

              A  `%'  character  followed  by  any other character is dis‚Äê
              carded, but the other character is printed  (don't  rely  on
              this,  as  further  format characters may be introduced).  A
              `%' at the end of the format argument causes  undefined  be‚Äê
              haviour  since there is no following character.  In some lo‚Äê
              cales, it may hide your door keys, while in  others  it  may
              remove the final page from the novel you are reading.

              The  %m  and %d directives support the [1m#[22m, [1m0 [22mand [1m+ [22mflags, but
              the other directives do not, even  if  they  print  numbers.
              Numeric  directives  that do not support these flags include
              [1mG[22m, [1mU[22m, [1mb[22m, [1mD[22m, [1mk [22mand [1mn[22m.  The `-' format flag is  supported  and
              changes the alignment of a field from right-justified (which
              is the default) to left-justified.

              See the [1mUNUSUAL FILENAMES [22msection for information about  how
              unusual characters in filenames are handled.

       -prune True;  if  the  file is a directory, do not descend into it.
              If [1m-depth [22mis given, then  [1m-prune  [22mhas  no  effect.   Because
              [1m-delete  [22mimplies  [1m-depth[22m, you cannot usefully use [1m-prune [22mand
              [1m-delete  [22mtogether.   For  example,  to  skip  the  directory
              [4msrc/emacs[24m  and all files and directories under it, and print
              the names of the other files found, do something like this:
                  find . -path ./src/emacs -prune -o -print

       -quit  Exit immediately (with return value zero if no  errors  have
              occurred).   This is different to [1m-prune [22mbecause [1m-prune [22monly
              applies to the contents of pruned directories,  while  [1m-quit[0m
              simply makes [1mfind [22mstop immediately.  No child processes will
              be left running.  Any command lines which have been built by
              [1m-exec ... + [22mor [1m-execdir ... + [22mare invoked before the program
              is exited.  After [1m-quit [22mis executed, no more files specified
              on  the  command  line  will  be  processed.   For  example,
              `[1mfind [4m[22m/tmp/foo[24m [4m/tmp/bar[24m [1m-print -quit[22m`   will   print    only
              `/tmp/foo`.
              One common use of [1m-quit [22mis to stop searching the file system
              once we have found what we want.  For example, if we want to
              find just a single file we can do this:
                  find / -name needle -print -quit

   [1mOPERATORS[0m
       Listed in order of decreasing precedence:

       ( [4mexpr[24m )
              Force  precedence.   Since  parentheses  are  special to the
              shell, you will normally need to quote them.   Many  of  the
              examples  in  this manual page use backslashes for this pur‚Äê
              pose: `\(...\)' instead of `(...)'.

       ! [4mexpr[24m True if [4mexpr[24m is false.  This  character  will  also  usually
              need protection from interpretation by the shell.

       -not [4mexpr[0m
              Same as ! [4mexpr[24m, but not POSIX compliant.

       [4mexpr1[24m [4mexpr2[0m
              Two  expressions in a row are taken to be joined with an im‚Äê
              plied [1m-a[22m; [4mexpr2[24m is not evaluated if [4mexpr1[24m is false.

       [4mexpr1[24m -a [4mexpr2[0m
              Same as [4mexpr1[24m [4mexpr2[24m.

       [4mexpr1[24m -and [4mexpr2[0m
              Same as [4mexpr1[24m [4mexpr2[24m, but not POSIX compliant.

       [4mexpr1[24m -o [4mexpr2[0m
              Or; [4mexpr2[24m is not evaluated if [4mexpr1[24m is true.

       [4mexpr1[24m -or [4mexpr2[0m
              Same as [4mexpr1[24m [1m-o [4m[22mexpr2[24m, but not POSIX compliant.

       [4mexpr1[24m , [4mexpr2[0m
              List; both [4mexpr1[24m and [4mexpr2[24m are always evaluated.  The  value
              of [4mexpr1[24m is discarded; the value of the list is the value of
              [4mexpr2[24m.  The comma operator can be useful for  searching  for
              several   different  types  of  thing,  but  traversing  the
              filesystem hierarchy only once.  The [1m-fprintf [22maction can  be
              used  to list the various matched items into several differ‚Äê
              ent output files.

       Please note that [1m-a [22mwhen specified implicitly (for example  by  two
       tests  appearing  without an explicit operator between them) or ex‚Äê
       plicitly has higher precedence than [1m-o[22m.  This  means  that  [1mfind  .[0m
       [1m-name afile -o -name bfile -print [22mwill never print [4mafile[24m.

[1mUNUSUAL FILENAMES[0m
       Many of the actions of [1mfind [22mresult in the printing of data which is
       under the control of other users.  This includes file names, sizes,
       modification  times and so forth.  File names are a potential prob‚Äê
       lem since they can contain any character except `\0' and `/'.   Un‚Äê
       usual characters in file names can do unexpected and often undesir‚Äê
       able things to your terminal (for example, changing the settings of
       your function keys on some terminals).  Unusual characters are han‚Äê
       dled differently by various actions, as described below.

       -print0, -fprint0
              Always print the exact filename, unchanged, even if the out‚Äê
              put is going to a terminal.

       -ls, -fls
              Unusual  characters  are always escaped.  White space, back‚Äê
              slash, and double quote characters are printed using C-style
              escaping (for example `\f', `\"').  Other unusual characters
              are printed using an octal escape.  Other printable  charac‚Äê
              ters  (for [1m-ls [22mand [1m-fls [22mthese are the characters between oc‚Äê
              tal 041 and 0176) are printed as-is.

       -printf, -fprintf
              If the output is not going to a terminal, it is printed  as-
              is.   Otherwise, the result depends on which directive is in
              use.  The directives %D, %F, %g, %G, %H, %Y, and  %y  expand
              to  values which are not under control of files' owners, and
              so are printed as-is.  The directives %a, %b,  %c,  %d,  %i,
              %k,  %m, %M, %n, %s, %t, %u and %U have values which are un‚Äê
              der the control of files' owners but which cannot be used to
              send  arbitrary  data  to  the  terminal,  and  so these are
              printed as-is.  The directives %f, %h, %l,  %p  and  %P  are
              quoted.   This  quoting  is performed in the same way as for
              GNU [1mls[22m.  This is not the same quoting mechanism as  the  one
              used  for [1m-ls [22mand [1m-fls[22m.  If you are able to decide what for‚Äê
              mat to use for the output of [1mfind [22mthen it is normally better
              to  use  `\0'  as  a terminator than to use newline, as file
              names can contain white space and newline  characters.   The
              setting  of  the  `LC_CTYPE' environment variable is used to
              determine which characters need to be quoted.

       -print, -fprint
              Quoting is handled in  the  same  way  as  for  [1m-printf  [22mand
              [1m-fprintf[22m.   If you are using [1mfind [22min a script or in a situa‚Äê
              tion where the matched files might have arbitrary names, you
              should consider using [1m-print0 [22minstead of [1m-print[22m.

       The  [1m-ok [22mand [1m-okdir [22mactions print the current filename as-is.  This
       may change in a future release.

[1mSTANDARDS CONFORMANCE[0m
       For closest compliance to the POSIX standard, you  should  set  the
       POSIXLY_CORRECT  environment  variable.   The following options are
       specified in the POSIX standard (IEEE Std  1003.1-2008,  2016  Edi‚Äê
       tion):

       [1m-H     [22mThis option is supported.

       [1m-L     [22mThis option is supported.

       [1m-name  [22mThis  option  is supported, but POSIX conformance depends on
              the POSIX conformance of  the  system's  [1mfnmatch[22m(3)  library
              function.  As of findutils-4.2.2, shell metacharacters (`*',
              `?' or `[]' for example) match a leading `.',  because  IEEE
              PASC  interpretation  126  requires  this.  This is a change
              from previous versions of findutils.

       [1m-type  [22mSupported.  POSIX specifies `b', `c', `d', `l', `p', `f' and
              `s'.  GNU find also supports `D', representing a Door, where
              the OS provides these.  Furthermore, GNU find allows  multi‚Äê
              ple types to be specified at once in a comma-separated list.

       [1m-ok    [22mSupported.   Interpretation  of the response is according to
              the `yes' and `no' patterns selected by setting the `LC_MES‚Äê
              SAGES' environment variable.  When the `POSIXLY_CORRECT' en‚Äê
              vironment variable is set, these patterns are taken system's
              definition  of  a  positive (yes) or negative (no) response.
              See the system's documentation for [1mnl_langinfo[22m(3),  in  par‚Äê
              ticular  YESEXPR  and NOEXPR.  When `POSIXLY_CORRECT' is not
              set, the patterns are instead taken from [1mfind[22m's own  message
              catalogue.

       [1m-newer [22mSupported.   If the file specified is a symbolic link, it is
              always dereferenced.  This is a change from previous  behav‚Äê
              iour, which used to take the relevant time from the symbolic
              link; see the HISTORY section below.

       [1m-perm  [22mSupported.  If the POSIXLY_CORRECT environment  variable  is
              not  set,  some  mode arguments (for example +a+x) which are
              not valid in POSIX are supported for backward-compatibility.

       Other primaries
              The primaries [1m-atime[22m, [1m-ctime[22m, [1m-depth[22m, [1m-exec[22m, [1m-group[22m, [1m-links[22m,
              [1m-mtime[22m,  [1m-nogroup[22m,  [1m-nouser[22m,  [1m-ok[22m,  [1m-path[22m,  [1m-print[22m,  [1m-prune[22m,
              [1m-size[22m, [1m-user [22mand [1m-xdev [22mare all supported.

       The POSIX standard specifies parentheses `(', `)', negation `!' and
       the logical AND/OR operators [1m-a [22mand [1m-o[22m.

       All  other options, predicates, expressions and so forth are exten‚Äê
       sions beyond the POSIX standard.  Many of these extensions are  not
       unique to GNU find, however.

       The POSIX standard requires that [1mfind [22mdetects loops:

              The  [1mfind  [22mutility shall detect infinite loops; that is, en‚Äê
              tering a previously visited directory that is an ancestor of
              the  last  file  encountered.   When  it detects an infinite
              loop, find shall write a diagnostic message to standard  er‚Äê
              ror  and  shall either recover its position in the hierarchy
              or terminate.

       GNU [1mfind [22mcomplies with these requirements.  The link count  of  di‚Äê
       rectories which contain entries which are hard links to an ancestor
       will often be lower than they otherwise should be.  This  can  mean
       that GNU find will sometimes optimise away the visiting of a subdi‚Äê
       rectory which is actually a link to an ancestor.  Since  [1mfind  [22mdoes
       not  actually  enter  such  a  subdirectory, it is allowed to avoid
       emitting a diagnostic message.   Although  this  behaviour  may  be
       somewhat confusing, it is unlikely that anybody actually depends on
       this behaviour.  If the leaf optimisation has been turned off  with
       [1m-noleaf[22m,  the directory entry will always be examined and the diag‚Äê
       nostic message will be issued where it  is  appropriate.   Symbolic
       links  cannot  be  used to create filesystem cycles as such, but if
       the [1m-L [22moption or the [1m-follow [22moption is in use, a diagnostic message
       is  issued  when [1mfind [22mencounters a loop of symbolic links.  As with
       loops containing hard links, the leaf optimisation will often  mean
       that  [1mfind  [22mknows that it doesn't need to call [4mstat()[24m or [4mchdir()[24m on
       the symbolic link, so this diagnostic is frequently not necessary.

       The [1m-d [22moption is supported for compatibility with various BSD  sys‚Äê
       tems, but you should use the POSIX-compliant option [1m-depth [22minstead.

       The POSIXLY_CORRECT environment variable does not affect the behav‚Äê
       iour of the [1m-regex [22mor [1m-iregex  [22mtests  because  those  tests  aren't
       specified in the POSIX standard.

[1mENVIRONMENT VARIABLES[0m
       LANG   Provides  a default value for the internationalization vari‚Äê
              ables that are unset or null.

       LC_ALL If set to a non-empty string value, override the  values  of
              all the other internationalization variables.

       LC_COLLATE
              The  POSIX standard specifies that this variable affects the
              pattern matching to be used for the [1m-name [22moption.  GNU  find
              uses  the  [1mfnmatch[22m(3)  library  function, and so support for
              `LC_COLLATE' depends on the system library.   This  variable
              also  affects  the  interpretation  of  the response to [1m-ok[22m;
              while the `LC_MESSAGES' variable selects the actual  pattern
              used to interpret the response to [1m-ok[22m, the interpretation of
              any bracket expressions in the pattern will be  affected  by
              `LC_COLLATE'.

       LC_CTYPE
              This  variable  affects  the  treatment of character classes
              used in regular expressions and also with the [1m-name [22mtest, if
              the  system's  [1mfnmatch[22m(3)  library  function  supports this.
              This variable also affects the interpretation of any charac‚Äê
              ter classes in the regular expressions used to interpret the
              response to the prompt issued by [1m-ok[22m.  The `LC_CTYPE'  envi‚Äê
              ronment  variable will also affect which characters are con‚Äê
              sidered to be unprintable when filenames  are  printed;  see
              the section UNUSUAL FILENAMES.

       LC_MESSAGES
              Determines  the locale to be used for internationalised mes‚Äê
              sages.  If the  `POSIXLY_CORRECT'  environment  variable  is
              set, this also determines the interpretation of the response
              to the prompt made by the [1m-ok [22maction.

       NLSPATH
              Determines the location of the internationalisation  message
              catalogues.

       PATH   Affects  the directories which are searched to find the exe‚Äê
              cutables invoked by [1m-exec[22m, [1m-execdir[22m, [1m-ok [22mand [1m-okdir[22m.

       POSIXLY_CORRECT
              Determines  the  block  size  used  by  [1m-ls  [22mand  [1m-fls[22m.   If
              [1mPOSIXLY_CORRECT [22mis set, blocks are units of 512 bytes.  Oth‚Äê
              erwise they are units of 1024 bytes.

              Setting this variable also turns off warning messages  (that
              is, implies [1m-nowarn[22m) by default, because POSIX requires that
              apart from the output  for  [1m-ok[22m,  all  messages  printed  on
              stderr  are  diagnostics  and must result in a non-zero exit
              status.

              When POSIXLY_CORRECT is not set, [1m-perm [4m[22m+zzz[24m is treated  just
              like  [1m-perm [4m[22m/zzz[24m if [4m+zzz[24m is not a valid symbolic mode.  When
              POSIXLY_CORRECT is set, such constructs are  treated  as  an
              error.

              When POSIXLY_CORRECT is set, the response to the prompt made
              by the [1m-ok [22maction is interpreted according to  the  system's
              message  catalogue,  as  opposed  to according to [1mfind[22m's own
              message translations.

       TZ     Affects the time zone used for some of the time-related for‚Äê
              mat directives of [1m-printf [22mand [1m-fprintf[22m.

[1mEXAMPLES[0m
   [1mSimple `find|xargs` approach[0m
       ‚Ä¢      Find  files  named  [4mcore[24m  in or below the directory [4m/tmp[24m and
              delete them.

                  [1m$ find /tmp -name core -type f -print | xargs /bin/rm -f[0m

              Note that this will work incorrectly if there are any  file‚Äê
              names  containing newlines, single or double quotes, or spa‚Äê
              ces.

   [1mSafer `find -print0 | xargs -0` approach[0m
       ‚Ä¢      Find files named [4mcore[24m in or below  the  directory  [4m/tmp[24m  and
              delete them, processing filenames in such a way that file or
              directory names containing single or double  quotes,  spaces
              or newlines are correctly handled.

                  [1m$ find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f[0m

              The [1m-name [22mtest comes before the [1m-type [22mtest in order to avoid
              having to call [1mstat(2) [22mon every file.

       Note that there is still a race between the time [1mfind [22mtraverses the
       hierarchy printing the matching filenames, and the time the process
       executed by [1mxargs [22mworks with that file.

   [1mExecuting a command for each file[0m
       ‚Ä¢      Run [4mfile[24m on every file in or below the current directory.

                  [1m$ find . -type f -exec file '{}' \;[0m

              Notice that the braces are enclosed in single quote marks to
              protect  them  from  interpretation as shell script punctua‚Äê
              tion.  The semicolon is similarly protected by the use of  a
              backslash, though single quotes could have been used in that
              case also.

       In many cases, one might prefer the  [1m`-exec ... +`  [22mor  better  the
       [1m`-execdir ... +` [22msyntax for performance and security reasons.

   [1mTraversing the filesystem just once - for 2 different actions[0m
       ‚Ä¢      Traverse the filesystem just once, listing set-user-ID files
              and directories into [4m/root/suid.txt[24m  and  large  files  into
              [4m/root/big.txt[24m.

                  [1m$ find / \[0m
                      [1m\( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\n' \) , \[0m
                      [1m\( -size +100M -fprintf /root/big.txt '%-10s %p\n' \)[0m

              This example uses the line-continuation character '\' on the
              first two lines to instruct the shell  to  continue  reading
              the command on the next line.

   [1mSearching files by age[0m
       ‚Ä¢      Search for files in your home directory which have been mod‚Äê
              ified in the last twenty-four hours.

                  [1m$ find $HOME -mtime 0[0m

              This command works this way because the time since each file
              was  last  modified is divided by 24 hours and any remainder
              is discarded.  That means that to match  [1m-mtime  0[22m,  a  file
              will  have  to have a modification in the past which is less
              than 24 hours ago.

   [1mSearching files by permissions[0m
       ‚Ä¢      Search for files which are executable but not readable.

                  [1m$ find /sbin /usr/sbin -executable \! -readable -print[0m

       ‚Ä¢      Search for files which have read and  write  permission  for
              their  owner,  and group, but which other users can read but
              not write to.

                  [1m$ find . -perm 664[0m

              Files which meet these criteria but have  other  permissions
              bits  set (for example if someone can execute the file) will
              not be matched.

       ‚Ä¢      Search for files which have read and  write  permission  for
              their owner and group, and which other users can read, with‚Äê
              out regard to the presence of any extra permission bits (for
              example the executable bit).

                  [1m$ find . -perm -664[0m

              This will match a file which has mode [4m0777[24m, for example.

       ‚Ä¢      Search  for  files  which  are  writable  by somebody (their
              owner, or their group, or anybody else).

                  [1m$ find . -perm /222[0m

       ‚Ä¢      Search for files which are writable by either their owner or
              their group.

                  [1m$ find . -perm /220[0m
                  [1m$ find . -perm /u+w,g+w[0m
                  [1m$ find . -perm /u=w,g=w[0m

              All three of these commands do the same thing, but the first
              one uses the octal representation of the file mode, and  the
              other two use the symbolic form.  The files don't have to be
              writable by both the owner and group to be  matched;  either
              will do.

       ‚Ä¢      Search  for files which are writable by both their owner and
              their group.

                  [1m$ find . -perm -220[0m
                  [1m$ find . -perm -g+w,u+w[0m

              Both these commands do the same thing.

       ‚Ä¢      A more elaborate search on permissions.

                  [1m$ find . -perm -444 -perm /222 \! -perm /111[0m
                  [1m$ find . -perm -a+r -perm /a+w \! -perm /a+x[0m

              These two commands both search for files that  are  readable
              for  everybody ([1m-perm -444 [22mor [1m-perm -a+r[22m), have at least one
              write bit set ([1m-perm /222 [22mor [1m-perm /a+w[22m) but  are  not  exe‚Äê
              cutable  for  anybody  ([1m! -perm /111 [22mor [1m! -perm /a+x [22mrespec‚Äê
              tively).

   [1mPruning - omitting files and subdirectories[0m
       ‚Ä¢      Copy the contents of  [4m/source-dir[24m  to  [4m/dest-dir[24m,  but  omit
              files  and  directories  named  [4m.snapshot[24m  (and  anything in
              them).  It also omits files or directories whose  name  ends
              in [4m'~'[24m, but not their contents.

                  [1m$ cd /source-dir[0m
                  [1m$ find . -name .snapshot -prune -o \( \! -name '*~' -print0 \) \[0m
                      [1m| cpio -pmd0 /dest-dir[0m

              The  construct  [1m-prune -o \( ... -print0 \) [22mis quite common.
              The idea here is that the expression before  [1m-prune  [22mmatches
              things  which  are to be pruned.  However, the [1m-prune [22maction
              itself returns true, so the following [1m-o  [22mensures  that  the
              right  hand  side  is  evaluated  only for those directories
              which didn't get pruned (the contents of the pruned directo‚Äê
              ries  are  not  even  visited, so their contents are irrele‚Äê
              vant).  The expression on the right hand side of the  [1m-o  [22mis
              in  parentheses  only  for  clarity.  It emphasises that the
              [1m-print0 [22maction takes place only for things that didn't  have
              [1m-prune [22mapplied to them.  Because the default `and' condition
              between tests binds more tightly than [1m-o[22m, this  is  the  de‚Äê
              fault anyway, but the parentheses help to show what is going
              on.

       ‚Ä¢      Given the following directory of projects and their  associ‚Äê
              ated  SCM  administrative  directories, perform an efficient
              search for the projects' roots:

                  [1m$ find repo/ \[0m
                      [1m\( -exec test -d '{}/.svn' \; \[0m
                      [1m-or -exec test -d '{}/.git' \; \[0m
                      [1m-or -exec test -d '{}/CVS' \; \[0m
                      [1m\) -print -prune[0m

              Sample output:

                  [1mrepo/project1/CVS[0m
                  [1mrepo/gnu/project2/.svn[0m
                  [1mrepo/gnu/project3/.svn[0m
                  [1mrepo/gnu/project3/src/.svn[0m
                  [1mrepo/project4/.git[0m

              In this example, [1m-prune [22mprevents  unnecessary  descent  into
              directories  that  have already been discovered (for example
              we do not  search  [4mproject3/src[24m  because  we  already  found
              [4mproject3/.svn[24m),  but  ensures  sibling directories ([4mproject2[0m
              and [4mproject3[24m) are found.

   [1mOther useful examples[0m
       ‚Ä¢      Search for several file types.

                  [1m$ find /tmp -type f,d,l[0m

              Search for files, directories, and symbolic links in the di‚Äê
              rectory  [4m/tmp[24m  passing these types as a comma-separated list
              (GNU  extension),  which  is  otherwise  equivalent  to  the
              longer, yet more portable:

                  [1m$ find /tmp \( -type f -o -type d -o -type l \)[0m

       ‚Ä¢      Search  for  files  with the particular name [4mneedle[24m and stop
              immediately when we find the first one.

                  [1m$ find / -name needle -print -quit[0m

       ‚Ä¢      Demonstrate the interpretation of the [1m%f [22mand [1m%h  [22mformat  di‚Äê
              rectives  of the [1m-printf [22maction for some corner-cases.  Here
              is an example including some output.

                  [1m$ find . .. / /tmp /tmp/TRACE compile compile/64/tests/find -maxdepth 0 -printf '[%h][%f]\n'[0m
                  [1m[.][.][0m
                  [1m[.][..][0m
                  [1m[][/][0m
                  [1m[][tmp][0m
                  [1m[/tmp][TRACE][0m
                  [1m[.][compile][0m
                  [1m[compile/64/tests][find][0m

[1mEXIT STATUS[0m
       [1mfind [22mexits with status 0 if all files are  processed  successfully,
       greater  than 0 if errors occur.  This is deliberately a very broad
       description, but if the return value is non-zero,  you  should  not
       rely on the correctness of the results of [1mfind[22m.

       When some error occurs, [1mfind [22mmay stop immediately, without complet‚Äê
       ing all the actions specified.  For example, some  starting  points
       may  not have been examined or some pending program invocations for
       [1m-exec ... {} + [22mor [1m-execdir ... {} + [22mmay not have been performed.

[1mHISTORY[0m
       As of findutils-4.2.2, shell metacharacters (`*', `?' or  `[]'  for
       example)  used  in  filename  patterns match a leading `.', because
       IEEE POSIX interpretation 126 requires this.

       As of findutils-4.3.3, [1m-perm /000 [22mnow matches all files instead  of
       none.

       Nanosecond-resolution   timestamps   were   implemented  in  findu‚Äê
       tils-4.3.3.

       As of findutils-4.3.11, the [1m-delete [22maction sets [1mfind[22m's exit  status
       to  a nonzero value when it fails.  However, [1mfind [22mwill not exit im‚Äê
       mediately.  Previously, [1mfind[22m's exit status was  unaffected  by  the
       failure of [1m-delete[22m.

       Feature                Added in   Also occurs in
       -newerXY               4.3.3      BSD
       -D                     4.3.1
       -O                     4.3.1

       -readable              4.3.0
       -writable              4.3.0
       -executable            4.3.0
       -regextype             4.2.24
       -exec ... +            4.2.12     POSIX
       -execdir               4.2.12     BSD
       -okdir                 4.2.12
       -samefile              4.2.11
       -H                     4.2.5      POSIX
       -L                     4.2.5      POSIX
       -P                     4.2.5      BSD
       -delete                4.2.3
       -quit                  4.2.3
       -d                     4.2.3      BSD
       -wholename             4.2.0
       -iwholename            4.2.0
       -ignore_readdir_race   4.2.0
       -fls                   4.0
       -ilname                3.8
       -iname                 3.8
       -ipath                 3.8
       -iregex                3.8

       The  syntax  [1m-perm +MODE [22mwas removed in findutils-4.5.12, in favour
       of [1m-perm /MODE[22m.  The [1m+MODE [22msyntax had been deprecated since  findu‚Äê
       tils-4.2.21 which was released in 2005.

[1mNON-BUGS[0m
   [1mOperator precedence surprises[0m
       The  command  [1mfind  .  -name afile -o -name bfile -print [22mwill never
       print [4mafile[24m because this is actually equivalent  to  [1mfind  .  -name[0m
       [1mafile -o \( -name bfile -a -print \)[22m.  Remember that the precedence
       of [1m-a [22mis higher than that of [1m-o [22mand when there is no operator spec‚Äê
       ified between tests, [1m-a [22mis assumed.

   [1m‚Äúpaths must precede expression‚Äù error message[0m
       [1m$ find . -name *.c -print[0m
       find: paths must precede expression
       find: possible unquoted pattern after predicate `-name'?

       This  happens  when  the shell could expand the pattern [4m*.c[24m to more
       than one file name existing in the current directory,  and  passing
       the resulting file names in the command line to [1mfind [22mlike this:
       [1mfind . -name frcode.c locate.c word_io.c -print[0m
       That  command  is  of  course  not going to work, because the [1m-name[0m
       predicate allows exactly only one pattern as argument.  Instead  of
       doing  things this way, you should enclose the pattern in quotes or
       escape the wildcard, thus allowing [1mfind [22mto use the pattern with the
       wildcard  during  the search for file name matching instead of file
       names expanded by the parent shell:
       [1m$ find . -name '*.c' -print[0m
       [1m$ find . -name \*.c -print[0m

[1mBUGS[0m
       There are security problems inherent  in  the  behaviour  that  the
       POSIX standard specifies for [1mfind[22m, which therefore cannot be fixed.
       For example, the [1m-exec [22maction is inherently insecure, and  [1m-execdir[0m
       should be used instead.

       The  environment  variable  [1mLC_COLLATE [22mhas no effect on the [1m-ok [22mac‚Äê
       tion.

[1mREPORTING BUGS[0m
       GNU  findutils  online  help:  <https://www.gnu.org/software/findu‚Äê
       tils/#get-help>
       Report    any    translation   bugs   to   <https://translationpro‚Äê
       ject.org/team/>

       Report any other issue  via  the  form  at  the  GNU  Savannah  bug
       tracker:
              <https://savannah.gnu.org/bugs/?group=findutils>
       General topics about the GNU findutils package are discussed at the
       [4mbug-findutils[24m mailing list:
              <https://lists.gnu.org/mailman/listinfo/bug-findutils>

[1mCOPYRIGHT[0m
       Copyright ¬©  1990-2021  Free  Software  Foundation,  Inc.   License
       GPLv3+:   GNU   GPL   version   3   or  later  <https://gnu.org/li‚Äê
       censes/gpl.html>.
       This is free software: you are free to change and redistribute  it.
       There is NO WARRANTY, to the extent permitted by law.

[1mSEE ALSO[0m
       [1mchmod[22m(1),   [1mlocate[22m(1),   [1mls[22m(1),  [1mupdatedb[22m(1),  [1mxargs[22m(1),  [1mlstat[22m(2),
       [1mstat[22m(2), [1mctime[22m(3) [1mfnmatch[22m(3), [1mprintf[22m(3), [1mstrftime[22m(3),  [1mlocatedb[22m(5),
       [1mregex[22m(7)

       Full documentation <https://www.gnu.org/software/findutils/find>
       or available locally via: [1minfo find[0m

                                                                   FIND(1)
